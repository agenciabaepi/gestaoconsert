'use client';
import { useEffect, useCallback } from 'react';
import { usePathname, useRouter } from 'next/navigation';

interface PageRefreshOptions {
  refreshOnNavigation?: boolean;
  refreshDelay?: number;
  excludePaths?: string[];
}

export const usePageRefresh = (options: PageRefreshOptions = {}) => {
  const {
    refreshOnNavigation = true,
    refreshDelay = 100,
    excludePaths = ['/login', '/']
  } = options;

  const pathname = usePathname();
  const router = useRouter();

  // âœ… FunÃ§Ã£o para refresh inteligente da pÃ¡gina
  const refreshPage = useCallback(() => {
    // NÃ£o fazer refresh em pÃ¡ginas excluÃ­das
    if (excludePaths.some(path => pathname.startsWith(path))) {
      return;
    }

    console.log('ðŸ”„ Fazendo refresh da pÃ¡gina:', pathname);
    
    // Usar router.refresh() do Next.js ao invÃ©s de window.location.reload()
    router.refresh();
  }, [pathname, router, excludePaths]);

  // âœ… Refresh automÃ¡tico ao navegar (com delay)
  useEffect(() => {
    if (!refreshOnNavigation) return;

    const timeoutId = setTimeout(() => {
      console.log('ðŸ”„ Auto-refresh apÃ³s navegaÃ§Ã£o para:', pathname);
      refreshPage();
    }, refreshDelay);

    return () => clearTimeout(timeoutId);
  }, [pathname, refreshOnNavigation, refreshDelay, refreshPage]);

  return {
    refreshPage
  };
};
