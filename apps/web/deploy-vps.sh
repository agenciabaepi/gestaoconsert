#!/bin/bash

# Script para deploy autom√°tico no VPS
# Execute este script no servidor VPS

echo "üöÄ Iniciando deploy da aplica√ß√£o com corre√ß√µes do Supabase..."
echo "================================================================"

# Verificar se estamos no diret√≥rio correto
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå Erro: docker-compose.yml n√£o encontrado. Certifique-se de estar no diret√≥rio correto."
    exit 1
fi

# Fazer backup dos logs atuais
echo "\nüìã Fazendo backup dos logs atuais..."
mkdir -p logs_backup/$(date +%Y%m%d_%H%M%S)
docker-compose logs > logs_backup/$(date +%Y%m%d_%H%M%S)/app_logs.txt 2>/dev/null || echo "Nenhum log anterior encontrado"

# Parar aplica√ß√£o atual
echo "\nüõë Parando aplica√ß√£o atual..."
docker-compose down

if [ $? -eq 0 ]; then
    echo "‚úÖ Aplica√ß√£o parada com sucesso"
else
    echo "‚ö†Ô∏è  Aviso: Erro ao parar aplica√ß√£o (pode n√£o estar rodando)"
fi

# Fazer pull das atualiza√ß√µes
echo "\nüì• Fazendo pull das atualiza√ß√µes do reposit√≥rio..."
git stash push -m "Backup antes do deploy $(date)" 2>/dev/null || echo "Nenhuma altera√ß√£o local para fazer stash"
git pull origin master

if [ $? -eq 0 ]; then
    echo "‚úÖ Pull conclu√≠do com sucesso"
else
    echo "‚ùå Erro no pull. Verifique a conectividade e permiss√µes."
    exit 1
fi

# Verificar se as corre√ß√µes est√£o presentes
echo "\nüîç Verificando corre√ß√µes do Supabase..."
if grep -q "nxamrvfusyrtkcshehfm" docker-compose.yml && grep -q "nxamrvfusyrtkcshehfm" Dockerfile; then
    echo "‚úÖ Corre√ß√µes do Supabase detectadas nos arquivos"
else
    echo "‚ùå Corre√ß√µes do Supabase n√£o encontradas. Verifique o pull."
    exit 1
fi

# Limpar imagens antigas
echo "\nüóëÔ∏è  Limpando imagens antigas..."
docker system prune -f
docker image prune -f

# Fazer rebuild da aplica√ß√£o
echo "\nüî® Fazendo rebuild da aplica√ß√£o..."
docker-compose build --no-cache

if [ $? -eq 0 ]; then
    echo "‚úÖ Build conclu√≠do com sucesso"
else
    echo "‚ùå Erro no build. Verifique os logs acima."
    exit 1
fi

# Iniciar aplica√ß√£o
echo "\nüöÄ Iniciando aplica√ß√£o atualizada..."
docker-compose up -d

if [ $? -eq 0 ]; then
    echo "‚úÖ Aplica√ß√£o iniciada com sucesso"
else
    echo "‚ùå Erro ao iniciar aplica√ß√£o."
    exit 1
fi

# Aguardar inicializa√ß√£o
echo "\n‚è≥ Aguardando inicializa√ß√£o da aplica√ß√£o..."
sleep 15

# Verificar status dos containers
echo "\nüìä Status dos containers:"
docker-compose ps

# Verificar logs iniciais
echo "\nüìã Logs iniciais da aplica√ß√£o:"
docker-compose logs --tail=20 app

# Teste de conectividade
echo "\nüîç Testando conectividade..."
if curl -f http://localhost:3000 > /dev/null 2>&1; then
    echo "‚úÖ Aplica√ß√£o respondendo em http://localhost:3000"
else
    echo "‚ùå Aplica√ß√£o n√£o est√° respondendo. Verificando logs..."
    docker-compose logs --tail=50 app
fi

# Verificar se os erros de DNS pararam
echo "\nüîç Verificando se erros de DNS foram resolvidos..."
sleep 5
ERROR_COUNT=$(docker-compose logs --tail=100 app 2>/dev/null | grep -c "ERR_NAME_NOT_RESOLVED.*nxamrvfusyrtkcsehefm" || echo "0")

if [ "$ERROR_COUNT" -eq 0 ]; then
    echo "‚úÖ Nenhum erro de DNS detectado nos logs recentes"
else
    echo "‚ùå Ainda h√° $ERROR_COUNT erros de DNS nos logs. Investigando..."
    docker-compose logs --tail=50 app | grep "ERR_NAME_NOT_RESOLVED"
fi

echo "\nüéØ Resumo do Deploy:"
echo "================================================================"
echo "‚úÖ C√≥digo atualizado do reposit√≥rio"
echo "‚úÖ Corre√ß√µes do Supabase aplicadas"
echo "‚úÖ Aplica√ß√£o rebuilded e reiniciada"
echo "\nüìù Pr√≥ximos passos:"
echo "1. Monitorar logs por alguns minutos: docker-compose logs -f app"
echo "2. Testar login e funcionalidades principais"
echo "3. Verificar se erros de DNS pararam completamente"

echo "\nüîó Comandos √∫teis:"
echo "   Logs em tempo real: docker-compose logs -f app"
echo "   Status containers: docker-compose ps"
echo "   Restart aplica√ß√£o: docker-compose restart app"
echo "   Parar aplica√ß√£o: docker-compose down"

echo "\n‚úÖ Deploy conclu√≠do!"