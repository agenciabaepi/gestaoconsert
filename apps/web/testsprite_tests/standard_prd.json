{
  "meta": {
    "project": "Sistema Consert",
    "date": "2025-09-13",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "Sistema Consert is a service order management platform designed for technical repair shops, providing role-based access to admins, technicians, and attendants to efficiently manage service orders, client data, and communication integrations.",
  "core_goals": [
    "Provide secure authentication with role-based access control for admins, technicians, and attendants.",
    "Enable creation, editing, status tracking, and notifications of service orders for real-time management.",
    "Manage client and equipment data with historical service tracking per client.",
    "Integrate seamlessly with Supabase for database operations, Mercado Pago for payment processing, and WhatsApp for communication.",
    "Ensure high performance with response times under 2 seconds and support for at least 100 concurrent users.",
    "Maintain security best practices including SQL injection protection and CORS configuration.",
    "Guarantee system availability with 99.9% uptime in production."
  ],
  "key_features": [
    "Authentication API supporting login, session management, email verification, and forced logout.",
    "Service Orders API with CRUD operations, status updates, and notifications to clients and technicians.",
    "Client Management API for robust client and equipment data handling including search functionality.",
    "Integration with Mercado Pago API for payment creation, status tracking, reconciliation, and webhook handling.",
    "WhatsApp Web.js integration allowing message sending, connection management, and disconnect functionality.",
    "Email verification process with sending, verifying, and resending codes.",
    "Admin SaaS management features for companies, subscriptions, and metrics.",
    "Health Check API to monitor system uptime and health."
  ],
  "user_flow_summary": [
    "User logs in with role-based authentication and gains access to features according to their permission level.",
    "Admin or attendant creates or edits service orders and assigns status to track progress.",
    "Technicians receive notifications on assigned orders and update order status through the platform.",
    "Clients can view their service order status and receive notifications via WhatsApp or email.",
    "Admins manage client and equipment data, subscriptions, and monitor system metrics.",
    "Payment is processed securely through Mercado Pago integrated workflow with status and webhook updates.",
    "System health is periodically checked ensuring uptime and performance standards are met."
  ],
  "validation_criteria": [
    "All user roles can authenticate successfully and see only authorized routes.",
    "Service orders can be created, edited, viewed, and status updated correctly with notifications sent.",
    "Client and equipment information is accurately stored and retrievable by search.",
    "Payments via Mercado Pago complete with proper status tracking and reconciliation.",
    "WhatsApp messages are sent correctly and connection management APIs function as intended.",
    "Email verification codes are sent, verified, and can be resent without errors.",
    "Admin SaaS management APIs correctly handle companies, subscriptions, and provide accurate metrics.",
    "System uptime meets 99.9% availability and health checks respond as expected.",
    "Performance benchmarks meet the criteria of response times under 2 seconds for critical actions.",
    "Security measures effectively prevent SQL Injection and enforce CORS policies as defined."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "JavaScript",
      "Next.js 15.3.2",
      "React",
      "Node.js",
      "Supabase",
      "PostgreSQL",
      "Tailwind CSS",
      "WhatsApp Web.js",
      "Mercado Pago API",
      "Nodemailer",
      "Puppeteer"
    ],
    "features": [
      {
        "name": "Authentication API",
        "description": "Handles user authentication, session management, email verification, and forced logout functionality",
        "files": [
          "src/app/api/auth/force-logout/route.ts",
          "src/app/login/LoginClient.tsx",
          "src/context/AuthContext.tsx",
          "src/hooks/useAuthGuard.ts",
          "src/utils/authUtils.ts"
        ]
      },
      {
        "name": "Client Management API",
        "description": "CRUD operations for client management including search functionality",
        "files": [
          "src/app/api/clientes/route.ts",
          "src/app/clientes/page.tsx",
          "src/types/cliente.ts"
        ]
      },
      {
        "name": "Service Orders API",
        "description": "Create, manage and track service orders with status updates",
        "files": [
          "src/app/api/ordens/criar/route.ts",
          "src/app/nova-os/page.tsx",
          "src/app/ordens/page.tsx",
          "src/hooks/useOSLoading.ts",
          "src/hooks/useOrdens.ts"
        ]
      },
      {
        "name": "Email Verification API",
        "description": "Send and verify email verification codes for user authentication",
        "files": [
          "src/app/api/email/enviar-codigo/route.ts",
          "src/app/api/email/verificar-codigo/route.ts",
          "src/app/api/email/reenviar-codigo/route.ts",
          "src/lib/email.ts"
        ]
      },
      {
        "name": "Payment Processing API",
        "description": "Integration with Mercado Pago for payment processing, status tracking and webhooks",
        "files": [
          "src/app/api/pagamentos/criar/route.ts",
          "src/app/api/pagamentos/status/route.ts",
          "src/app/api/pagamentos/webhook/route.ts",
          "src/app/api/pagamentos/reconciliar/route.ts",
          "src/lib/mercadopago.ts"
        ]
      },
      {
        "name": "WhatsApp Integration API",
        "description": "WhatsApp Web.js integration for sending messages and managing connections",
        "files": [
          "src/app/api/whatsapp/connect/route.ts",
          "src/app/api/whatsapp/enviar/route.ts",
          "src/app/api/whatsapp/disconnect/route.ts"
        ]
      },
      {
        "name": "Health Check API",
        "description": "System health monitoring endpoint for uptime verification",
        "files": [
          "src/app/api/health-check/route.ts"
        ]
      },
      {
        "name": "Admin SaaS Management API",
        "description": "Administrative APIs for SaaS management including companies, subscriptions and metrics",
        "files": [
          "src/app/api/admin-saas/empresas/route.ts",
          "src/app/api/admin-saas/pagamentos/route.ts",
          "src/app/api/admin-saas/metrics/route.ts",
          "src/app/api/assinaturas/verificar-trial/route.ts",
          "src/app/api/assinaturas/webhook/route.ts"
        ]
      }
    ]
  }
}
